name: Debug Workflow

on:
  push:
    branches:
      - master
      - main
    paths-ignore:
      - "**.md"
      - "docs/**"
  workflow_dispatch:
    inputs:
      test_number:
        description: "Phone number to test (e.g., 081234567890)"
        required: true
        default: "081234567890"
      headless:
        description: "Run in headless mode"
        required: true
        default: true
        type: boolean

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install playwright undetected-playwright
          playwright install chromium firefox --with-deps
          import asyncio
          from undetected_playwright.async_api import async_playwright
          import time

          async def scrape_basic_info():
              """Scrape title dan description dari halaman web"""
              try:
                  async with async_playwright() as p:
                      print("Launching browser dengan undetected mode...")
                      browser = await p.chromium.launch(
                          headless=True,
                          args=[
                              '--disable-blink-features=AutomationControlled',
                              '--disable-blink-features=AutomationControlledFeatures'
                          ]
                      )
                      
                      # Buat context dan page
                      context = await browser.new_context(viewport={'width': 1920, 'height': 1080})
                      page = await context.new_page()
                      
                      print("Membuka halaman...")
                      await page.goto("https://ceebydith.com/cek-hlr-lokasi-hp.html", timeout=60000)
                      
                      print("Menunggu halaman selesai loading...")
                      await page.wait_for_load_state("networkidle", timeout=30000)
                      
                      # Get page title
                      title = await page.title()
                      print(f"Title: {title}")
                      
                      # Handle Cloudflare if needed
                      if "Just a moment" in title:
                          print("Terdeteksi Cloudflare challenge, menunggu...")
                          await asyncio.sleep(10)
                          title = await page.title()
                          print(f"Title setelah menunggu: {title}")
                      
                      # Get meta description
                      description = await page.evaluate("""() => {
                          const meta = document.querySelector('meta[name="description"]');
                          return meta ? meta.getAttribute('content') : '';
                      }""")
                      print(f"Description: {description}")
                      
                      # Save halaman untuk debug
                      content = await page.content()
                      print(f"\nPage content length: {len(content)} bytes")
                      print("Saving page content to debug.html...")
                      with open("debug.html", "w", encoding="utf-8") as f:
                          f.write(content)
                      
                      # Take screenshot
                      await page.screenshot(path="debug_screenshot.png")
                      
                      await context.close()
                      await browser.close()
              except Exception as e:
                  print(f"Error: {str(e)}")
                  raise e

      - name: Run debug test
        run: python scripts/checker_debug_ci.py

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: debug-artifacts
          path: |
            debug.html
            debug_screenshot.png
          retention-days: 7
