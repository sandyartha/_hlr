name: Debug Workflow

on:
  workflow_dispatch:
    inputs:
      test_number:
        description: "Phone number to test (e.g., 081234567890)"
        required: true
        default: "081234567890"
      headless:
        description: "Run in headless mode"
        required: true
        default: true
        type: boolean

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y software-properties-common
          sudo add-apt-repository universe
          sudo apt-get update
          sudo apt-get install -y \
            libnss3 \
            libnspr4 \
            libatk1.0-0 \
            libatk-bridge2.0-0 \
            libcups2 \
            libdrm2 \
            libxkbcommon0 \
            libxcomposite1 \
            libxdamage1 \
            libxfixes3 \
            libxrandr2 \
            libgbm1 \
            libpulse0 \
            libwayland-client0 \
            libwayland-cursor0 \
            libwayland-egl1 \
            libwayland-server0 \
            libx11-xcb1 \
            libxcb-dri3-0 \
            libxcb-icccm4 \
            libxcb-image0 \
            libxcb-keysyms1 \
            libxcb-randr0 \
            libxcb-render-util0 \
            libxcb-shape0 \
            libxcb-util1 \
            libxcb-xfixes0 \
            libxcb-xinerama0 \
            libxcb-xkb1 \
            libxkbcommon-x11-0 \
            xvfb

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install requests
          playwright install chromium firefox --with-deps

      - name: Verify Playwright installation
        run: |
          python -c "
          from playwright.sync_api import sync_playwright
          with sync_playwright() as p:
              browser = p.chromium.launch()
              browser.close()
          print('âœ… Playwright verification successful')
          "

      - name: Create debug configuration
        run: |
          echo "DEBUG=true" >> .env
          echo "TEST_NUMBER=${{ github.event.inputs.test_number }}" >> .env
          echo "HEADLESS=${{ github.event.inputs.headless }}" >> .env

      - name: Modify debug script for CI
        run: |
          cat > scripts/checker_debug_ci.py << 'EOF'
          import asyncio
          from playwright.async_api import async_playwright

          async def scrape_basic_info():
              """Scrape title dan description dari halaman web"""
              try:
                  async with async_playwright() as p:
                      # Launch browser
                      browser = await p.chromium.launch(headless=True)
                      page = await browser.new_page()
                      
                      # Navigate to the page
                      print("Membuka halaman...")
                      await page.goto("https://ceebydith.com/cek-hlr-lokasi-hp.html")
                      
                      # Get page title
                      title = await page.title()
                      print(f"Title: {title}")
                      
                      # Get meta description
                      description = await page.evaluate("""() => {
                          const meta = document.querySelector('meta[name="description"]');
                          return meta ? meta.getAttribute('content') : '';
                      }""")
                      print(f"Description: {description}")
                      
                      await browser.close()
              except Exception as e:
                  print(f"Error: {str(e)}")
                  raise e
              
          if __name__ == "__main__":
              asyncio.run(scrape_basic_info())
          EOF

      - name: Run debug test
        run: python scripts/checker_debug_ci.py

      - name: Upload debug artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: debug-artifacts
          path: |
            debug_*.png
            debug_*.txt
          retention-days: 7
